/*
 * Dive EA REST API
 * Dive Experience Amplifier REST API provides a set of services which leverage obtaining catalog and TV grid info, contextual items (cards) information and saving and a static (scene by scene) version of the card carousel for linear TV and video on demand
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.touchvie.sdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * MapData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-23T13:15:20.476+01:00")
public class MapData {
  @SerializedName("latitude")
  private Float latitude = null;

  @SerializedName("longitude")
  private Float longitude = null;

  @SerializedName("zoom")
  private Integer zoom = null;

  public MapData latitude(Float latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * Value of the location latitude, in decimal format degrees
   * @return latitude
  **/
  @ApiModelProperty(required = true, value = "Value of the location latitude, in decimal format degrees")
  public Float getLatitude() {
    return latitude;
  }

  public void setLatitude(Float latitude) {
    this.latitude = latitude;
  }

  public MapData longitude(Float longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * Value of the location longitude, in decimal format degrees
   * @return longitude
  **/
  @ApiModelProperty(required = true, value = "Value of the location longitude, in decimal format degrees")
  public Float getLongitude() {
    return longitude;
  }

  public void setLongitude(Float longitude) {
    this.longitude = longitude;
  }

  public MapData zoom(Integer zoom) {
    this.zoom = zoom;
    return this;
  }

   /**
   * Zoom value, defines the height coordinate over the given location
   * @return zoom
  **/
  @ApiModelProperty(required = true, value = "Zoom value, defines the height coordinate over the given location")
  public Integer getZoom() {
    return zoom;
  }

  public void setZoom(Integer zoom) {
    this.zoom = zoom;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MapData mapData = (MapData) o;
    return Objects.equals(this.latitude, mapData.latitude) &&
        Objects.equals(this.longitude, mapData.longitude) &&
        Objects.equals(this.zoom, mapData.zoom);
  }

  @Override
  public int hashCode() {
    return Objects.hash(latitude, longitude, zoom);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MapData {\n");
    
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    zoom: ").append(toIndentedString(zoom)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

