/*
 * Dive EA REST API
 * Dive Experience Amplifier REST API provides a set of services which leverage obtaining catalog and TV grid info, contextual items (cards) information and saving and a static (scene by scene) version of the card carousel for linear TV and video on demand
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.touchvie.sdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Information regarding the source of any API item
 */
@ApiModel(description = "Information regarding the source of any API item")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-23T13:15:20.476+01:00")
public class SourceData {
  @SerializedName("name")
  private String name = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("disclaimer")
  private String disclaimer = null;

  @SerializedName("image")
  private String image = null;

  public SourceData name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the source
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the source")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SourceData url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL of the source
   * @return url
  **/
  @ApiModelProperty(required = true, value = "URL of the source")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public SourceData disclaimer(String disclaimer) {
    this.disclaimer = disclaimer;
    return this;
  }

   /**
   * Disclaimer text of the source
   * @return disclaimer
  **/
  @ApiModelProperty(value = "Disclaimer text of the source")
  public String getDisclaimer() {
    return disclaimer;
  }

  public void setDisclaimer(String disclaimer) {
    this.disclaimer = disclaimer;
  }

  public SourceData image(String image) {
    this.image = image;
    return this;
  }

   /**
   * URL of the source icon
   * @return image
  **/
  @ApiModelProperty(value = "URL of the source icon")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceData sourceData = (SourceData) o;
    return Objects.equals(this.name, sourceData.name) &&
        Objects.equals(this.url, sourceData.url) &&
        Objects.equals(this.disclaimer, sourceData.disclaimer) &&
        Objects.equals(this.image, sourceData.image);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, url, disclaimer, image);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceData {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    disclaimer: ").append(toIndentedString(disclaimer)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

